<?php
/**
 *  Copyright (c) 2020 Hawksearch (www.hawksearch.com) - All Rights Reserved
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 */

use HawkSearch\Datafeed\Block\Adminhtml\System\Config\FieldsMapping;
use HawkSearch\Datafeed\Model\FieldsManagement;

?>

<?php
/** @var FieldsMapping $block */
$_htmlId = $block->getHtmlId() ? $block->getHtmlId() : '_' . uniqid();
$_colspan = $block->isAddAfter() ? 2 : 1;
?>

<div class="design_theme_ua_regexp" id="grid<?= $block->escapeHtmlAttr($_htmlId) ?>">
    <div class="admin__control-table-wrapper">
        <table class="admin__control-table" id="<?= $block->escapeHtmlAttr($block->getElement()->getId()) ?>">
            <thead>
            <tr>
                <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                    <th><?= $block->escapeHtml($column['label']) ?></th>
                <?php endforeach; ?>
                <th class="col-actions" colspan="<?= (int)$_colspan ?>"><?= $block->escapeHtml(__('Action')) ?></th>
            </tr>
            </thead>
            <tfoot>
            <tr>
                <td colspan="<?= count($block->getColumns())+$_colspan ?>" class="col-actions-map">
                    <button id="mapFieldBtn<?= $block->escapeHtmlAttr($_htmlId) ?>" class="action-map" title="<?= $block->escapeHtmlAttr(__('Map Field')) ?>" type="button">
                        <span><?= $block->escapeHtmlAttr(__('Map Field')) ?></span>
                    </button>
                    <button id="addFieldBtn<?= $block->escapeHtmlAttr($_htmlId) ?>" class="action-add" title="<?= $block->escapeHtmlAttr(__('Add Field')) ?>" type="button">
                        <span><?= $block->escapeHtmlAttr(__('Add Field')) ?></span>
                    </button>
                </td>
            </tr>
            </tfoot>
            <tbody id="addRow<?= $block->escapeHtmlAttr($_htmlId) ?>"></tbody>
        </table>
    </div>
    <input type="hidden" name="<?= $block->escapeHtmlAttr($block->getElement()->getName()) ?>[__empty]" value="" />

    <script>
        require([
            'mage/template',
            'prototype'
        ], function (mageTemplate) {
        // create row creator
        window.arrayRow<?= $block->escapeJs($_htmlId) ?> = {

            // define row prototypeJS template
            template: mageTemplate(
                    '<tr id="<%- _id %>">'
                    <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                        + '<td>'
                        + '<?= $block->escapeJs($block->renderCellTemplate($columnName)) ?>'
                        + '<\/td>'
                    <?php endforeach; ?>

                    <?php if ($block->isAddAfter()) : ?>
                        + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span>'
                        + '<?= $block->escapeJs($block->escapeHtml(__('Add after'))) ?>'
                        + '<\/span><\/button><\/td>'
                    <?php endif; ?>

                    + '<td class="col-actions"><button '
                    + 'onclick="arrayRow<?= $block->escapeJs($_htmlId) ?>.del(\'<%- _id %>\')" '
                    + 'class="action-delete" type="button">'
                    + '<span><?= $block->escapeJs($block->escapeHtml(__('Delete'))) ?><\/span><\/button><\/td>'
                    + '<\/tr>'
            ),

            // define row prototypeJS template
            templateNewRowAdd: mageTemplate(
                '<tr id="<%- _id %>">'
                <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                <?php if (in_array($columnName, $block->getNewColumnNames())): ?>
                + '<td>'
                + '<?= $block->escapeJs($block->renderCellTemplate($columnName . '_new', true)) ?>'
                + '<\/td>'
                <?php else: ?>
                + '<td>'
                + '<?= $block->escapeJs($block->renderCellTemplate($columnName, true)) ?>'
                + '<\/td>'
                <?php endif; ?>
                <?php endforeach; ?>

                <?php if ($block->isAddAfter()) : ?>
                + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span>'
                + '<?= $block->escapeJs($block->escapeHtml(__('Add after'))) ?>'
                + '<\/span><\/button><\/td>'
                <?php endif; ?>

                + '<td class="col-actions"><button '
                + 'onclick="arrayRow<?= $block->escapeJs($_htmlId) ?>.del(\'<%- _id %>\')" '
                + 'class="action-delete" type="button">'
                + '<span><?= $block->escapeJs($block->escapeHtml(__('Delete'))) ?><\/span><\/button><\/td>'
                + '<\/tr>'
            ),

            // define row prototypeJS template
            templateNewRowMap: mageTemplate(
                '<tr id="<%- _id %>">'
                <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                + '<td>'
                + '<?= $block->escapeJs($block->renderCellTemplate($columnName, true)) ?>'
                + '<\/td>'
                <?php endforeach; ?>

                <?php if ($block->isAddAfter()) : ?>
                + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span>'
                + '<?= $block->escapeJs($block->escapeHtml(__('Add after'))) ?>'
                + '<\/span><\/button><\/td>'
                <?php endif; ?>

                + '<td class="col-actions"><button '
                + 'onclick="arrayRow<?= $block->escapeJs($_htmlId) ?>.del(\'<%- _id %>\')" '
                + 'class="action-delete" type="button">'
                + '<span><?= $block->escapeJs($block->escapeHtml(__('Delete'))) ?><\/span><\/button><\/td>'
                + '<\/tr>'
            ),

            addMapping: function (rowData, insertAfterId, newRow = false) {
                // generate default template data
                var templateValues;

                // Prepare template values
                if (rowData) {
                    templateValues = rowData;
                } else {
                    var d = new Date();
                    templateValues = {
                        <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                        <?= $block->escapeJs($columnName) ?>: '',
                        'option_extra_attrs': {},
                        <?php endforeach; ?>
                        _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                    };
                }

                // Insert new row after specified row or at the bottom
                if (insertAfterId) {
                    if (newRow === true) {
                        Element.insert($(insertAfterId), {after: this.templateNewRowMap(templateValues)});
                    } else {
                        Element.insert($(insertAfterId), {after: this.template(templateValues)});
                    }
                } else {
                    if (newRow === true) {
                        Element.insert($('addRow<?= $block->escapeJs(
                            $_htmlId
                        ) ?>'), {bottom: this.templateNewRowMap(templateValues)});
                    } else {
                        Element.insert($('addRow<?= $block->escapeJs(
                            $_htmlId
                        ) ?>'), {bottom: this.template(templateValues)});
                    }
                }

                // Fill controls with data
                if (rowData) {
                    var rowInputElementNames = Object.keys(rowData.column_values);
                    for (var i = 0; i < rowInputElementNames.length; i++) {
                        if ($(rowInputElementNames[i])) {
                            $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                        }
                    }
                }

                // Add event for {addAfterBtn} button
                <?php if ($block->isAddAfter()) : ?>
                Event.observe('addAfterBtn' + templateValues._id, 'click', this.addMapping.bind(this, false, templateValues._id));
                <?php endif; ?>
            },

            addField: function (rowData, insertAfterId) {
                // generate default template data
                var templateValues;

                // Prepare template values
                if (rowData) {
                    templateValues = rowData;
                } else {
                    var d = new Date();
                    templateValues = {
                        <?php foreach ($block->getColumns() as $columnName => $column) : ?>
                        <?php if (in_array($columnName, $block->getNewColumnNames())): ?>
                            <?php $columnName = $columnName . '_new'; ?>
                        <?php endif; ?>
                        <?= $block->escapeJs($columnName) ?>: '',
                        'option_extra_attrs': {},
                        <?php endforeach; ?>
                        _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                    };
                }

                // Insert new row after specified row or at the bottom
                if (insertAfterId) {
                    Element.insert($(insertAfterId), {after: this.templateNewRowAdd(templateValues)});
                } else {
                    Element.insert($('addRow<?= $block->escapeJs(
                        $_htmlId
                    ) ?>'), {bottom: this.templateNewRowAdd(templateValues)});
                }

                // Fill controls with data
                if (rowData) {
                    var rowInputElementNames = Object.keys(rowData.column_values);
                    for (var i = 0; i < rowInputElementNames.length; i++) {
                        if ($(rowInputElementNames[i])) {
                            $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                        }
                    }
                }

                // Add event for {addAfterBtn} button
                <?php if ($block->isAddAfter()) : ?>
                Event.observe('addAfterBtn' + templateValues._id, 'click', this.addField.bind(this, false, templateValues._id));
                <?php endif; ?>
            },

            del: function(rowId) {
                $(rowId).remove();
            },

            syncFields: function () {
                jQuery.ajax({
                    type: 'GET',
                    url: '/rest/V1/hawksearch/fields',
                    dataType: 'json',
                    contentType: 'application/json',
                    showLoader: true
                }).then(function (data) {
                    if (data.status === '<?= FieldsManagement::STATUS_SUCCESS ?>' && data.response_data.length > 0) {
                        //clear table data
                        document.getElementById('addRow<?= $block->escapeHtmlAttr($_htmlId) ?>').innerHTML = "";
                        //add new data from response
                        data.response_data.forEach(function (value, index) {
                            arrayRow<?= $block->escapeJs($_htmlId) ?>.add(JSON.parse(value), false);
                        });
                    }
                    if (data.status === '<?= FieldsManagement::STATUS_ERROR ?>') {
                        alert(data.message);
                    }
                    if (data.status === '<?= FieldsManagement::STATUS_SUCCESS ?>' && data.response_data.length === 0) {
                        alert('Empty API response.');
                    }
                })
            }
        }

        // bind add action to "Map Field" button in last row
        Event.observe('mapFieldBtn<?= $block->escapeJs($_htmlId) ?>',
            'click',
            arrayRow<?= $block->escapeJs($_htmlId) ?>.addMapping.bind(
                arrayRow<?= $block->escapeJs($_htmlId) ?>, false, false, true
            )
        );

        // bind add action to "Add Field" button in last row
        Event.observe('addFieldBtn<?= $block->escapeJs($_htmlId) ?>',
            'click',
            arrayRow<?= $block->escapeJs($_htmlId) ?>.addField.bind(
                arrayRow<?= $block->escapeJs($_htmlId) ?>, false, false, true
            )
        );

        // add existing rows
        <?php
        foreach ($block->getArrayRows() as $_rowId => $_row) {
            echo /** @noEscape */ "arrayRow{$block->escapeJs($_htmlId)}.addMapping(" . /** @noEscape */ $_row->toJson() . ");\n";
        }
        ?>

        // Toggle the grid availability, if element is disabled (depending on scope)
        <?php if ($block->getElement()->getDisabled()) : ?>
        toggleValueElements({checked: true}, $('grid<?= $block->escapeJs($_htmlId) ?>').parentNode);
        <?php endif; ?>
        });
    </script>
</div>
